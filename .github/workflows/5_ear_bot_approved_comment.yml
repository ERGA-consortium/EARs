name: The EARs Reviewing bot on approved comments

on:
  workflow_run:
    workflows: [The EARs Reviewing bot on approved changes]
    types:
      - completed

jobs:
  approved-changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "pr_status"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/pr_status.zip`, Buffer.from(download.data));

      - name: Unzip artifact
        run: unzip pr_status.zip

      - name: Extract artifact
        uses: actions/github-script@v6
        with:
          script: |
            let fs = require('fs');
            let pr_status = fs.readFileSync('pr_status', 'utf8').split('\n');
            core.exportVariable('PR_NUMBER', pr_status[0].split('=')[1]);
            core.exportVariable('REVIEWER', pr_status[1].split('=')[1]);
            core.exportVariable('SHOULD_RUN', pr_status[2].split('=')[1]);

      - name: Save artifact to env
        run: |
          echo "PR_NUMBER=$(cat pr_status | grep PR_NUMBER | cut -d'=' -f2)" >> $GITHUB_ENV
          echo "REVIEWER=$(cat pr_status | grep REVIEWER | cut -d'=' -f2)" >> $GITHUB_ENV
          echo "SHOULD_RUN=$(cat pr_status | grep SHOULD_RUN | cut -d'=' -f2)" >> $GITHUB_ENV

      - name: Set up Python
        if: ${{ env.SHOULD_RUN == 'true' }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Thanks the reviewer for the approval
        if: ${{ env.SHOULD_RUN == 'true' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          PR_NUMBER: ${{ env.PR_NUMBER }}
          REVIEWER: ${{ env.REVIEWER }}
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ear_bot/requirements.txt
          python -u ear_bot/ear_bot_reviewer.py --approve
